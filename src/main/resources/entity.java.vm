package ${package.Entity};

    #if(${activeRecord})
    import java.io.Serializable;

    #end
    #foreach($pkg in ${table.importPackages})
    import ${pkg};
    #end
    #if(${entityLombokModel})
    ##import com.baomidou.mybatisplus.annotations.Version;
    import lombok.Data;
    #end

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiModelProperty;
import com.baomidou.mybatisplus.annotation.TableField;

/**
 * <p>
 * $!{table.comment}
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${entityLombokModel})
@Data
#end
@Api(tags = "${entity}" , description = "${table.comment}")
#if(${table.convert})
@TableName("${table.name}")
#end
#if(${superEntityClass})
public class ${entity} extends ${superEntityClass}#if(${activeRecord})<${entity}>#end {
#elseif(${activeRecord})
public class ${entity} extends Model<${entity}> {
#else
public class ${entity} implements Serializable{
#end

private static final long serialVersionUID=1L;

##
#foreach($field in ${table.fields})
    #if(${field.keyFlag})
        #set($keyPropertyName=${field.propertyName})
    #end

    #if("$!field.comment" != "")
    @ApiModelProperty(value = "${field.comment}")
    #end
    #if(${field.keyFlag})
    ##
        #if(${field.keyIdentityFlag})
        @TableId(value = "${field.name}" , type = IdType.AUTO)
        #elseif(${field.convert})
        @TableId("${field.name}")
        #end
    ##
    #elseif(${field.fill})
    ##
        #if(${field.convert})
        @TableField(value = "${field.name}" , fill = FieldFill.${field.fill})
        #else
        @TableField(fill = FieldFill.${field.fill})
        #end
    #elseif(${field.convert})
        #if(${field.name}=="create_by_id" || ${field.name}=="create_by_name" || ${field.name}=="create_time"
        || ${field.name}=="update_by_id" || ${field.name}=="update_by_name" || ${field.name}=="update_time")
        @TableField(value = "${field.name}" , fill = FieldFill.INSERT)
        #else
        @TableField("${field.name}")
        #end
    #end
## 
    #if(${versionFieldName}==${field.name})
    @Version
    #end
##
    #if(${logicDeleteFieldName}==${field.name})
    @TableLogic
    #end
private ${field.propertyType} ${field.propertyName};
#end
## 

#if(!${entityLombokModel})
    #foreach($field in ${table.fields})
        #if(${field.propertyType.equals("boolean")})
            #set($getprefix="is")
        #else
            #set($getprefix="get")
        #end

    public ${field.propertyType} ${getprefix}${field.capitalName}(){
            return ${field.propertyName};
            }

        #if(${entityBuilderModel})
        public ${entity} set${field.capitalName}(${field.propertyType} ${field.propertyName}){
        #else
        public void set${field.capitalName}(${field.propertyType} ${field.propertyName}) {
        #end
            this.${field.propertyName} = ${field.propertyName};
        #if(${entityBuilderModel})
                return this;
        #end
            }
    #end
#end

#if(${entityColumnConstant})
    #foreach($field in ${table.fields})
    public static final String ${field.name.toUpperCase()} ="${field.name}";

    #end
#end
#if(${activeRecord})
@Override
protected Serializable pkVal(){
    #if(${keyPropertyName})
            return this.${keyPropertyName};
    #else
            return this.id;
    #end
        }

#end
#if(!${entityLombokModel})
@Override
public String toString() {
        return "${entity}{" +
    #foreach($field in ${table.fields})
        #if($!{velocityCount}==1)
                "${field.propertyName}=" + ${field.propertyName} +
        #else
                ", ${field.propertyName}=" + ${field.propertyName} +
        #end
    #end
        "}";
        }
#end
        }
